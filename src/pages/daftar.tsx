import type { NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { useRef, useState } from "react";

type DataDiri = {
  nama: string;
  email: string;
  password: string;
  umur: number;
};

const Daftar: NextPage = () => {
  const router = useRouter();
  const btnModal = useRef<HTMLButtonElement>(null);
  const [dataDiri, setDataDiri] = useState<DataDiri>({
    nama: "",
    email: "",
    password: "",
    umur: 0,
  });

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setDataDiri((prevDataDiri) => ({
      ...prevDataDiri,
      [name]: name === "umur" ? parseInt(value, 10) : value,
    }));
  };

  const onSubmit = async () => {
    const body: string = JSON.stringify(dataDiri);

    // check if data empty
    if (Object.values(dataDiri).includes("")) {
      alert("Mohon lengkapi data diri anda⚠");
      return;
    }

    console.log(dataDiri);
    // return

    // check if email valid

    // check if email valid
    // const response = await fetch("/api/user/getEmail", {
    //   method: "POST",
    //   headers: { "content-Type": "application/json" },
    //   body: JSON.stringify({ email: dataDiri.email }),
    // });

    // const data: { sudah_ada: boolean } = await response.json();

    // if (data.sudah_ada) {
    //   if (btnModal.current) {
    //     btnModal.current.click();
    //   }
    //   alert("Username tidak tersedia⚠");
    //   return;
    // }

    // create data responden & re-routing
    // const createResponse = await fetch("/api/user/create", {
    //   method: "POST",
    //   headers: { "content-Type": "application/json" },
    //   body,
    // });

    // const createData: { user: { id_user: string } } =
    //   await createResponse.json();

    // localStorage.setItem(
    //   "user-login",
    //   JSON.stringify({ ...dataDiri, id_user: createData.user.id_user })
    // );
  };

  const Loading = () => (
    <div>
      <div
        className="modal fade fixed top-0 left-0 hidden h-full w-full overflow-y-auto overflow-x-hidden outline-none"
        id="staticBackdrop"
        data-bs-backdrop="static"
        data-bs-keyboard="false"
        tabIndex={-1}
        aria-labelledby="staticBackdropLabel"
        aria-hidden="true"
      >
        <div className="modal-dialog pointer-events-none relative flex w-auto justify-center">
          <div className="modal-content pointer-events-auto relative flex w-2/3 flex-col rounded-md border-none bg-white bg-clip-padding text-current shadow-lg outline-none">
            <div className="modal-header flex flex-shrink-0 items-center justify-between rounded-t-md p-4">
              <h5
                className="text-xl font-medium leading-normal text-gray-800"
                id="exampleModalLabel"
              >
                Loading...
              </h5>
            </div>
          </div>
        </div>
      </div>
    </div>
  );

  return (
    <div className="flex h-screen w-screen flex-col items-center justify-center bg-gray-300 bg-gradient-to-b from-[#2e026d] to-[#15162c]">
      <Head>
        <title>Belajar BISINDO</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Loading />
      <div className="flex w-80 flex-col items-center justify-between rounded-lg bg-white bg-opacity-95 shadow-md">
        <div className="mb-2 py-2 text-center text-2xl font-bold text-blue-700">
          Daftar Akun Baru
        </div>
        <div className="mb-2 w-64 flex-1 justify-around">
          {/* nama lengkap */}
          <label
            htmlFor="namaLengkap"
            className="block text-sm font-medium leading-5 text-gray-700"
          >
            Nama Lengkap
          </label>
          <input
            name="nama"
            onChange={handleChange}
            type="text"
            className="m-0 my-1 mb-2 w-full rounded border border-solid border-gray-300 bg-white px-3 py-1.5 font-normal text-gray-700 transition ease-in-out focus:border-blue-600 focus:bg-white focus:text-gray-700 focus:outline-none"
            id="namaLengkap"
          />
          {/* email */}
          <label
            htmlFor="email"
            className="block text-sm font-medium leading-5 text-gray-700"
          >
            Email
          </label>
          <input
            name="email"
            onChange={handleChange}
            type="text"
            className="m-0 my-1 mb-2 w-full rounded border border-solid border-gray-300 bg-white px-3 py-1.5 font-normal text-gray-700 transition ease-in-out focus:border-blue-600 focus:bg-white focus:text-gray-700 focus:outline-none"
            id="email"
          />
          {/* password */}
          <label
            htmlFor="password"
            className="block text-sm font-medium leading-5 text-gray-700"
          >
            Password
          </label>
          <input
            name="password"
            onChange={handleChange}
            type="password"
            className="m-0 my-1 mb-2 w-full rounded border border-solid border-gray-300 bg-white px-3 py-1.5 font-normal text-gray-700 transition ease-in-out focus:border-blue-600 focus:bg-white focus:text-gray-700 focus:outline-none"
            id="password"
          />
          {/* ulang password */}
          <label
            htmlFor="ulangPassword"
            className="block text-sm font-medium leading-5 text-gray-700"
          >
            Ulang Password
          </label>
          <input
            name="ulangPassword"
            onChange={handleChange}
            type="password"
            className="m-0 my-1 mb-2 w-full rounded border border-solid border-gray-300 bg-white px-3 py-1.5 font-normal text-gray-700 transition ease-in-out focus:border-blue-600 focus:bg-white focus:text-gray-700 focus:outline-none"
            id="ulangPassword"
          />
        </div>
        <button
          onClick={() => void onSubmit()}
          // onClick={() => void router.push("/materi")}
          type="submit"
          className="mb-4 w-64 rounded bg-blue-600 px-6 py-2.5 text-xs font-medium leading-tight text-white shadow-md transition duration-150 ease-in-out hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg"
        >
          DAFTAR
        </button>
      </div>
      <div className="p-3 text-center text-gray-400">
        Sudah punya akun?{" "}
        <span
          onClick={() => void router.push("login")}
          className="cursor-pointer font-semibold text-blue-600 underline"
        >
          Login disini
        </span>
      </div>
    </div>
  );
};

export default Daftar;
