import { User } from "@prisma/client";
import type { NextPage } from "next";
import { signIn, signOut } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { useState } from "react";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";

const Login: NextPage = () => {
  const router = useRouter();

  // usestate untuk username dan password
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");

  // handle change input
  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.name === "username") {
      setUsername(e.target.value);
    } else {
      setPassword(e.target.value);
    }
  };

  // handle login
  const handleLogin = async (
    e: React.MouseEvent<HTMLButtonElement, MouseEvent>
  ) => {
    e.preventDefault();

    // cek apakah username dan password sudah diisi
    if (username === "" || password === "") {
      toast.error("Username dan password harus diisi");
      return;
    }

    // cek apakah username dan password sudah benar
    const res = await fetch("/api/login", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        username,
        password,
      }),
    });

    // jika username dan password benar, alihkan ke halaman dashboard
    if (res.status === 200) {
      // set session browser login true
      localStorage.setItem("login", "true");
      // save res.user ke localstorage
      const { user } = (await res.json()) as { user: User };
      localStorage.setItem("user", JSON.stringify(user));

      if (user.username === "admin") {
        void router.push("admin/dashboard");
        return;
      }

      // alihkan ke halaman panel
      await signOut({ callbackUrl: "/panel/dashboard" });
    } else {
      // tampilkan response message
      const { message } = (await res.json()) as { message: string };
      toast.error(message);
    }
  };

  return (
    <div className="flex h-screen w-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
      <Head>
        <title>Diabetes Assistant</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ToastContainer position="top-right" />
      <div className="flex w-[90%] flex-col items-center justify-between rounded-lg bg-white bg-opacity-95 py-4 shadow-md sm:w-[25%]">
        <div className="py-2 text-center text-xl font-bold uppercase text-gray-700">
          Silahkan login
        </div>

        {/* jika belum punya akun, alihkan ke daftar */}
        <div className="mb-4 text-center text-sm text-gray-500">
          Belum punya akun?{" "}
          <Link
            href="/daftar"
            className="text-blue-600 hover:text-blue-800 hover:underline"
          >
            Daftar
          </Link>
        </div>

        {/* input masuk dengan usename dan password */}
        <div className="mb-2 flex w-72 flex-col">
          <label
            htmlFor="username"
            className="mb-1 text-sm font-medium text-gray-600"
          >
            Username
          </label>
          <input
            type="text"
            id="username"
            name="username"
            className="rounded-md border border-gray-300 px-4 py-2 focus:border-blue-500 focus:outline-none"
            onChange={(e) => {
              handleChange(e);
            }}
          />
        </div>
        <div className="mb-2 flex w-72 flex-col">
          <label
            htmlFor="password"
            className="mb-1 text-sm font-medium text-gray-600"
          >
            Password
          </label>
          <input
            type="password"
            id="password"
            name="password"
            onChange={(e) => {
              handleChange(e);
            }}
            className="rounded-md border border-gray-300 px-4 py-2 focus:border-blue-500 focus:outline-none"
          />
        </div>

        {/* tombol login */}
        <button
          onClick={(e) => void handleLogin(e)}
          className="mt-2 mb-4 w-72 rounded bg-blue-600 px-6 py-2.5 font-medium leading-tight text-white shadow-md transition duration-150 ease-in-out hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-none"
        >
          Login
        </button>

        {/* pemisah dengan tulisan atau */}
        <div className="mb-4 mt-2 flex w-72 items-center justify-center">
          <div className="w-1/5 border-b md:w-1/4" />
          <div className="mx-2 text-xs font-medium uppercase text-gray-500">
            atau
          </div>
          <div className="w-1/5 border-b md:w-1/4" />
        </div>

        {/* masuk dengan akun google  */}
        <button
          onClick={() =>
            void signIn("google", {
              callbackUrl: "/panel",
            })
          }
          className="mb-4 w-72 rounded bg-red-600 px-6 py-2.5 font-medium leading-tight text-white shadow-md transition duration-150 ease-in-out hover:bg-red-700 hover:shadow-lg focus:bg-red-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-red-800 active:shadow-none"
        >
          Masuk dengan Google
        </button>
      </div>
    </div>
  );
};

export default Login;
